<?php

namespace Tests\Unit;

use App\Domain\Account\Models\Account;
use App\Domain\Company\Models\Company;
use App\Domain\ProxyLead\Models\ProxyLead;
use App\Domain\ProxyLead\Models\ProxyLeadSetting;
use Illuminate\Database\Eloquent\Collection;
use Tests\TestCase;

/**
 * Class DisplayProxyLeadReportTest.
 * @group TestAccountFixes
 */
class DisplayProxyLeadReportTest extends TestCase
{
    /** @var \App\Domain\ProxyLead\Models\ProxyLeadSetting */
    protected $proxyLeadSetting;

    /** @var Company */
    protected $company;
    /**
     * @var \Illuminate\Database\Eloquent\Model
     */
    private $account;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->truncate(Account::class);
        $this->truncate(Company::class);
        $this->truncate(ProxyLeadSetting::class);

        $this->account = Account::factory()->create();
        $this->company = Company::factory()->create(['account_id' => $this->account->id]);
        $this->proxyLeadSetting = ProxyLeadSetting::factory()->create(['company_id' => $this->company->id]);
    }

    /** @test */
    public function auth_user_should_see_empty_report()
    {
        $this->signIn(null, 'admin', $this->account);

        $this->get(
            route(
                'account.company.proxy-leads',
                ['company' => $this->company, 'accountId' => $this->account->id]
            )
        )
            ->assertStatus(200);
    }

    /** @test */
    public function auth_user_should_not_see_deleted_reports()
    {
        $this->signIn(null, 'admin', $this->account);

        /** @var Collection $reports */
        $reports = ProxyLead::factory()->count(2)->create(['proxy_lead_setting_id' => $this->proxyLeadSetting]);
        /** @var Collection $deletedReports */
        $deletedReports = ProxyLead::factory()->count(2)->create(['proxy_lead_setting_id' => $this->proxyLeadSetting])
            ->each
            ->delete();

        $response = $this->get(
            route(
                'account.company.proxy-leads',
                ['company' => $this->company, 'accountId' => $this->account->id]
            )
        );

        $deletedReports->each(
            function ($report) use ($response) {
                $response->assertDontSee($report->phone);
            }
        );
    }
}
